---
source: fixtures/tests/snapshot.rs
expression: expansion
---
#![feature(prelude_import)]
#[prelude_import]
use std::prelude::rust_2021::*;
#[macro_use]
extern crate std;
use std::path::Path;
use fixtures::fixtures;
fn test(_path: &Path) {}
extern crate test;
#[rustc_test_marker = "test_file_1_dot_txt"]
#[doc(hidden)]
pub const test_file_1_dot_txt: test::TestDescAndFn = test::TestDescAndFn {
    desc: test::TestDesc {
        name: test::StaticTestName("test_file_1_dot_txt"),
        ignore: false,
        ignore_message: ::core::option::Option::None,
        source_file: "fixtures/examples/negative_globs.rs",
        start_line: 9usize,
        start_col: 4usize,
        end_line: 9usize,
        end_col: 8usize,
        compile_fail: false,
        no_run: false,
        should_panic: test::ShouldPanic::No,
        test_type: test::TestType::Unknown,
    },
    testfn: test::StaticTestFn(
        #[coverage(off)]
        || test::assert_test_result(test_file_1_dot_txt()),
    ),
};
fn test_file_1_dot_txt() {
    test(
        ::std::path::Path::new(
            "<repo>/tests/fixtures/negative_globs/file_1.txt",
        ),
    );
}
#[allow(dead_code)]
fn main() {}
#[rustc_main]
#[coverage(off)]
#[doc(hidden)]
pub fn main() -> () {
    extern crate test;
    test::test_main_static(&[&test_file_1_dot_txt])
}
